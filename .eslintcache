[{"/home/safder/Documents/my-cloud/src/index.js":"1","/home/safder/Documents/my-cloud/src/App.js":"2","/home/safder/Documents/my-cloud/src/components/Nav.js":"3","/home/safder/Documents/my-cloud/src/components/ImageGrid.js":"4","/home/safder/Documents/my-cloud/src/components/SubGridByDate.js":"5","/home/safder/Documents/my-cloud/src/http-common.js":"6"},{"size":220,"mtime":1609450335271,"results":"7","hashOfConfig":"8"},{"size":2296,"mtime":1610049615324,"results":"9","hashOfConfig":"8"},{"size":578,"mtime":1610049275275,"results":"10","hashOfConfig":"8"},{"size":248,"mtime":1610049088324,"results":"11","hashOfConfig":"8"},{"size":354,"mtime":1609781223035,"results":"12","hashOfConfig":"8"},{"size":159,"mtime":1609788546504,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1snncfc",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/safder/Documents/my-cloud/src/index.js",[],["29","30"],"/home/safder/Documents/my-cloud/src/App.js",["31"],"import \"./App.css\";\nimport ImageGrid from \"./components/ImageGrid\";\nimport Nav from \"./components/Nav\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { render } from \"@testing-library/react\";\n\nfunction App() {\n    const [selectedFiles, setSelectedFiles] = useState([]);\n    const [renderGrid, setRenderGrid] = useState(0);\n\n    // Handle File uploading\n    const handleFileSelect = (e) => {\n        let filesSelected = [];\n        for (let i in e.target.files) {\n            filesSelected.push(e.target.files[i]);\n        }\n        setSelectedFiles([...filesSelected]);\n    };\n\n    const uploadFiles = () => {\n        let data = new FormData();\n        selectedFiles.forEach((file) => data.append(\"files\", file));\n        axios\n            .post(\"http://localhost:8342/upload\", data)\n            .then((response) => {\n                //succesfull upload\n                console.log(\"Upload was succesful: \" + response.data);\n            })\n            .catch((err) => {\n                console.log(err.response.data);\n            });\n        // Render grid on file change\n        renderGrid === 0 ? setRenderGrid(1) : setRenderGrid(0);\n    };\n    // End of File Upload Logic\n\n    const [imagePreview, setImagePreview] = useState([]);\n    console.log(imagePreview);\n    useEffect(() => {\n        axios.get(\"http://localhost:8342/getfiles\").then((res) => {\n            const fileNames = res.data;\n            const previewInfo = [];\n            const baseUrl = \"http://localhost:8342/uploads/\";\n            let lastId = 0;\n            fileNames.forEach((file) => {\n                previewInfo.push({\n                    imageUrl: baseUrl + file,\n                    id: lastId,\n                });\n                lastId += 1;\n            });\n            setImagePreview([...previewInfo]);\n        });\n    }, [renderGrid]);\n\n    return (\n        <div className=\"App\">\n            <div className=\"container\">\n                <Nav\n                    handleFileSelect={handleFileSelect}\n                    uploadFiles={uploadFiles}                />\n                <h1>\n                    <strong>Hello, </strong>Safder\n                </h1>\n                <ImageGrid imagePreview={imagePreview} />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","/home/safder/Documents/my-cloud/src/components/Nav.js",[],"/home/safder/Documents/my-cloud/src/components/ImageGrid.js",[],"/home/safder/Documents/my-cloud/src/components/SubGridByDate.js",[],["32","33"],"/home/safder/Documents/my-cloud/src/http-common.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":6,"column":10,"nodeType":"40","messageId":"41","endLine":6,"endColumn":16},{"ruleId":"34","replacedBy":"42"},{"ruleId":"36","replacedBy":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar",["44"],["45"],"no-global-assign","no-unsafe-negation"]